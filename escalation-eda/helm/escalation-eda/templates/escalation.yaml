{{- if .Values.namespace.create }}
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.namespace.name }}
{{- end }}
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: {{ .Values.jiralistener.name }}
  namespace: {{ .Values.namespace.name }}
  labels:
    app: jira-listener
{{- if .Values.letsEncryptCertificate }}
  annotations:
    serving.knative.openshift.io/disableRoute: "true"
{{- end }}
spec:
  template:
    metadata:
      labels:
        app: jira-listener
      annotations:
        autoscaling.knative.dev/min-scale: "1"
    spec:
      containers:
        - image: {{ .Values.jiralistener.image }}
          imagePullPolicy: Always
          name: jira-listener
          resources:
            limits:
              memory: 200Mi
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: escalation-swf-config
  namespace: {{ .Values.namespace.name }}
data:
  JIRA_URL: {{ .Values.escalationSwf.jira.url}}
  JIRA_PROJECT: {{ .Values.escalationSwf.jira.project}}
  JIRA_ISSUE_TYPE: '{{ .Values.escalationSwf.jira.issueType}}'
  ESCALATION_TIMEOUT_SECONDS: '{{ .Values.escalationSwf.escalationTimeoutSeconds}}'
---
apiVersion: v1
kind: Secret
metadata:
  name: escalation-swf-secret
  namespace: {{ .Values.namespace.name }}
type: Opaque
stringData:
  JIRA_USERNAME: {{ .Values.escalationSwf.jira.username}}
  JIRA_API_TOKEN: {{ .Values.escalationSwf.jira.apiToken}}
  MAILTRAP_API_TOKEN: {{ .Values.escalationSwf.mailTrap.apiToken}}
  MAILTRAP_INBOX_ID: '{{ .Values.escalationSwf.mailTrap.inboxId}}'
  OCP_API_SERVER_URL: {{ .Values.escalationSwf.ocp.apiServerUrl}}
  OCP_API_SERVER_TOKEN: {{ .Values.escalationSwf.ocp.apiServerToken}}
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: {{ .Values.escalationSwf.name }}
  namespace: {{ .Values.namespace.name }}
  labels:
    app: escalation-swf
spec:
  template:
    metadata:
      labels:
        app: escalation-swf
      annotations:
        autoscaling.knative.dev/min-scale: "1"
    spec:
      containers:
        - image: {{ .Values.escalationSwf.image }}
          imagePullPolicy: Always
          envFrom:
          - configMapRef:
              name: escalation-swf-config
          - secretRef:
              name: escalation-swf-secret
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: null
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: escalation-swf
          ports:
            - containerPort: 8080
              name: http1
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: null
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
---
{{- if .Values.eventdisplay.enabled }}
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: event-display
  namespace: {{ .Values.namespace.name }}
  labels:
    app: event-display
spec:
  template:
    metadata:
      labels:
        app: event-display
      annotations:
        autoscaling.knative.dev/min-scale: "1"
    spec:
      containers:
        - image: gcr.io/knative-releases/knative.dev/eventing/cmd/event_display
          name: event-display
          resources:
            limits:
              memory: 200Mi
{{- end }}
---
{{- if .Values.letsEncryptCertificate }}
{{- $cluster := lookup "config.openshift.io/v1" "Ingress" "" "cluster" }}
{{- $domain := "UNKNOWN" }}
{{- if hasKey $cluster "spec" }}
  {{- if hasKey $cluster.spec "domain" }}
    {{- $domain = $cluster.spec.domain}}
  {{- end }}
{{- end }}

apiVersion: route.openshift.io/v1
kind: Route
metadata:
  annotations:
    haproxy.router.openshift.io/timeout: 600s 
    kubernetes.io/tls-acme: "true"
  name: {{ .Values.jiralistener.name }} 
  namespace: knative-serving-ingress 
spec:
  host: {{ .Values.jiralistener.name }}-{{ .Values.namespace.name }}.{{ $domain }}
  port:
    targetPort: http2
  to:
    kind: Service
    name: kourier
    weight: 100
  wildcardPolicy: None
{{- end }}
